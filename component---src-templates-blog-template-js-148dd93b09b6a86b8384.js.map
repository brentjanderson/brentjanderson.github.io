{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","props","markdownRemark","data","frontmatter","html","a","createElement","title","date","dangerouslySetInnerHTML","__html","Header","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","react_default","reactstrap_es","fixed","light","color","expand","href","onClick","navbar","React","Component","Layout","_ref","children","gatsby_browser_entry","query","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header_Header","siteTitle","_2328579951","propTypes","PropTypes","node","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAMe,SAASI,EAASO,GAAO,IAI9BC,EADJD,EADFE,KAEMD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACER,EAAAS,EAAAC,cAACP,EAAA,EAAD,KACEH,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACEF,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACEF,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACEF,EAAAS,EAAAC,cAAA,eACEV,EAAAS,EAAAC,cAAA,UAAKH,EAAYI,OACjBX,EAAAS,EAAAC,cAAA,SAAIH,EAAYK,MAChBZ,EAAAS,EAAAC,cAAA,OAAKG,wBAAyB,CAAEC,OAAQN,UAS/C,IAAMV,EAAS,sTCjBDiB,cACnB,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMf,IAANe,MAEKC,OAASJ,EAAKI,OAAOC,KAAZC,QAAAN,KACdA,EAAKO,MAAQ,CACXC,QAAQ,GALOR,sCAQnBI,kBACED,KAAKM,SAAS,CACZD,QAASL,KAAKI,MAAMC,YAGxBE,kBACE,OACEC,EAAAlB,EAAAC,cAAA,WACEiB,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAQC,MAAM,aAAaC,OAAK,EAACC,MAAM,QAAQC,OAAO,MACpDL,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAaK,KAAK,KAAlB,kBACAN,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAeM,QAASf,KAAKC,SAC7BO,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAUJ,OAAQL,KAAKI,MAAMC,OAAQW,QAAM,GACzCR,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAKO,QAAM,GACTR,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,KACED,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAASK,KAAK,KAAd,SAEFN,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,KACED,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAASK,KAAK,UAAd,UAEFN,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,KACED,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAASK,KAAK,SAAd,iBA7BoBG,IAAMC,WCFpCC,iBAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbb,EAAAlB,EAAAC,cAAC+B,EAAA,YAAD,CACEC,MAAK,aAULhB,OAAQ,SAAApB,GAAI,OACVqB,EAAAlB,EAAAC,cAAAiB,EAAAlB,EAAAkC,SAAA,KACEhB,EAAAlB,EAAAC,cAACkC,EAAAnC,EAAD,CACEE,MAAOL,EAAKuC,KAAKC,aAAanC,MAC9BoC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS3C,EAAKuC,KAAKC,aAAanC,OACvD,CACEqC,KAAM,WACNC,QAAS,mDAIbtB,EAAAlB,EAAAC,cAAA,QAAMwC,KAAK,QAEbvB,EAAAlB,EAAAC,cAACyC,EAAD,CAAQC,UAAW9C,EAAKuC,KAAKC,aAAanC,QAC1CgB,EAAAlB,EAAAC,cAAA,WAAM8B,KA1BZlC,KAAA+C,MAgCFf,EAAOgB,UAAY,CACjBd,SAAUe,IAAUC,KAAKC,YAGZnB","file":"component---src-templates-blog-template-js-148dd93b09b6a86b8384.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Container, Row, Col } from 'reactstrap'\n\nimport Layout from '../components/layout'\n\nexport default function Template(props) {\n  const {\n    data, // this prop will be injected by the GraphQL query below.\n  } = props\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <Col>\n            <article>\n              <h1>{frontmatter.title}</h1>\n              <p>{frontmatter.date}</p>\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n            </article>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import React from 'react'\n// import { Link } from 'gatsby'\nimport {\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Collapse,\n} from 'reactstrap'\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top-sticky\" light color=\"light\" expand=\"md\">\n          <NavbarBrand href=\"/\">Brent Anderson</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/blog\">Blog</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../css/global.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.title },\n            {\n              name: 'keywords',\n              content: 'brent anderson, software, engineering, essays',\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>{children}</div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}