{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","Header","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","react_default","reactstrap_es","fixed","light","color","expand","href","onClick","navbar","React","Component","Layout","_ref","children","gatsby_browser_entry","query","data","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header_Header","siteTitle","_2328579951","propTypes","PropTypes","node","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAUeO,UAPM,kBACnBH,EAAAI,EAAAC,cAACH,EAAA,EAAD,KACEF,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,gXCMiBC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,OAASJ,EAAKI,OAAOC,KAAZC,QAAAN,KACdA,EAAKO,MAAQ,CACXC,QAAQ,GALOR,sCAQnBI,kBACED,KAAKM,SAAS,CACZD,QAASL,KAAKI,MAAMC,YAGxBE,kBACE,OACEC,EAAAf,EAAAC,cAAA,WACEc,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAAQC,MAAM,aAAaC,OAAK,EAACC,MAAM,QAAQC,OAAO,MACpDL,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAAaK,KAAK,KAAlB,kBACAN,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAAeM,QAASf,KAAKC,SAC7BO,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAAUJ,OAAQL,KAAKI,MAAMC,OAAQW,QAAM,GACzCR,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAAKO,QAAM,GACTR,EAAAf,EAAAC,cAACe,EAAA,EAAD,KACED,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAASK,KAAK,KAAd,SAEFN,EAAAf,EAAAC,cAACe,EAAA,EAAD,KACED,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAASK,KAAK,UAAd,UAEFN,EAAAf,EAAAC,cAACe,EAAA,EAAD,KACED,EAAAf,EAAAC,cAACe,EAAA,EAAD,CAASK,KAAK,SAAd,iBA7BoBG,IAAMC,WCFpCC,iBAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbb,EAAAf,EAAAC,cAAC4B,EAAA,YAAD,CACEC,MAAK,aAULhB,OAAQ,SAAAiB,GAAI,OACVhB,EAAAf,EAAAC,cAAAc,EAAAf,EAAAgC,SAAA,KACEjB,EAAAf,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,MAAOH,EAAKI,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASR,EAAKI,KAAKC,aAAaF,OACvD,CACEI,KAAM,WACNC,QAAS,mDAIbxB,EAAAf,EAAAC,cAAA,QAAMuC,KAAK,QAEbzB,EAAAf,EAAAC,cAACwC,EAAD,CAAQC,UAAWX,EAAKI,KAAKC,aAAaF,QAC1CnB,EAAAf,EAAAC,cAAA,WAAM2B,KA1BZG,KAAAY,MAgCFjB,EAAOkB,UAAY,CACjBhB,SAAUiB,IAAUC,KAAKC,YAGZrB","file":"component---src-pages-404-js-81f44319563ed9086729.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from 'react'\n// import { Link } from 'gatsby'\nimport {\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Collapse,\n} from 'reactstrap'\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top-sticky\" light color=\"light\" expand=\"md\">\n          <NavbarBrand href=\"/\">Brent Anderson</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/blog\">Blog</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../css/global.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.title },\n            {\n              name: 'keywords',\n              content: 'brent anderson, software, engineering, essays',\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>{children}</div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}