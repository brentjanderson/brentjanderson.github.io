{"version":3,"sources":["webpack:///./src/components/postSnippet.js","webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostSnippet","_ref","post","react_default","a","createElement","gatsby_browser_entry","to","frontmatter","path","title","date","excerpt","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","postSnippet","key","id","layout","reactstrap_es","fluid","pageQuery","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","fixed","light","color","expand","href","onClick","navbar","Component","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header_Header","siteTitle","_2328579951"],"mappings":"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","file":"component---src-pages-blog-js-ba05d90c976eb89025f3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostSnippet = ({ post }) => (\n  <div>\n    <h1>\n      <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n    </h1>\n    <p>\n      <strong>{post.frontmatter.date}</strong>\n    </p>\n    <p>{post.excerpt}</p>\n  </div>\n)\n\nexport default PostSnippet\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Container, Row, Col } from 'reactstrap'\n\nimport PostSnippet from '../components/postSnippet'\nimport Layout from '../components/layout'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostSnippet key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      <Container fluid>\n        <Row>\n          <Col>\n            <div>{Posts}</div>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n// import { Link } from 'gatsby'\nimport {\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Collapse,\n} from 'reactstrap'\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top-sticky\" light color=\"light\" expand=\"md\">\n          <NavbarBrand href=\"/\">Brent Anderson</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/blog\">Blog</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/contact\">Contact</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../css/global.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.title },\n            {\n              name: 'keywords',\n              content: 'brent anderson, software, engineering, essays',\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>{children}</div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}